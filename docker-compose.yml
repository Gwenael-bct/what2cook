services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: prod
      args:
        REACT_APP_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
    image: what2cook-web:latest
    ports:
      - "8080:80"
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    build: ./backend
    image: what2cook-backend:latest
    environment:
      NODE_ENV: production
      DB_HOST: db
      DB_USER: admin
      DB_PASSWORD: admin
      DB_NAME: recipes_db
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-changeme}
      JWT_SECRET: ${JWT_SECRET:-devsecret}
    command: sh -c "npx sequelize-cli db:migrate && node src/index.js"
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - backend_node_modules:/app/node_modules
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: recipes_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  pgdata:
  backend_node_modules:
